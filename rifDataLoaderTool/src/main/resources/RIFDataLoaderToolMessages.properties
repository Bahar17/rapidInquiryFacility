#================================================================================
#The Rapid Inquiry Facility (RIF) is an automated tool devised by SAHSU 
#that rapidly addresses epidemiological and public health questions using 
#routinely collected health and population data and generates standardised 
#rates and relative risks for any given health outcome, for specified age 
#and year ranges, for any given geographical area.
#
#Copyright 2014 Imperial College London, developed by the Small Area
#Health Statistics Unit. The work of the Small Area Health Statistics Unit 
#is funded by the Public Health England as part of the MRC-PHE Centre for 
#Environment and Health. Funding for this project has also been received 
#from the United States Centers for Disease Control and Prevention.  
#
#This file is part of the Rapid Inquiry Facility (RIF) project.
#RIF is free software: you can redistribute it and/or modify
#it under the terms of the GNU Lesser General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#RIF is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU Lesser General Public License for more details.
#
#You should have received a copy of the GNU Lesser General Public License
#along with RIF. If not, see <http://www.gnu.org/licenses/>; or write 
#to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, 
#Boston, MA 02110-1301 USA
#
#author: Kevin Garwood
#================================================================================

general.validation.emptyRequiredField=Field {0} cannot be empty.
general.validation.emptyRequiredList=The list {0} cannot be empty.

general.io.unableToReadFile=Unable to read file {0}.
general.io.unableToWriteToFile=Unable to write file.
general.io.nonExistentFile=File {0} does not exist.
workflowEnactor.finishedProcessingDataSet=Successfully finished processing data set {0}.

#Workflow States
workflowState.start.label=Start
workflowState.start.statusMessage=Data set has not yet been processed.
workflowState.extract.label=Extract
workflowState.extract.phaseLabel=1. Extract Phase
workflowState.extract.phaseLabel.toolTip=When the data set is first imported.  
workflowState.extract.statusMessage=Data extracted from source.
workflowState.clean.label=Clean
workflowState.clean.phaseLabel=2. Clean Phase
workflowState.clean.phaseLabel.toolTip=When the data set columns are renamed \nto what the RIF manager wants and when the data are cleaned \nand cast to data types that will be supported in \nthe underlying database.  
workflowState.clean.statusMessage=Cleaned
workflowState.convert.label=Convert
workflowState.convert.phaseLabel=3. Convert Phase
workflowState.convert.phaseLabel.toolTip=Once the data sets have been cleaned, \nthey need to be mapped to fields that are expected \nin part of the RIF schema.  Sometimes this step involves combining fields.
workflowState.convert.statusMessage=Converted
workflowState.combine.label=Combine
workflowState.combine.statusMessage=Combined tables
workflowState.split.label=Combine
workflowState.split.statusMessage=Combined tables
workflowState.optimise.label=Optimise
workflowState.optimise.phaseLabel=4. Optimise Phase
workflowState.optimise.phaseLabel.toolTip=This is the step where the RIF manager specifies\n whether a field should be indexed.
workflowState.optimise.statusMessage=Optimised
workflowState.check.label=Check
workflowState.check.phaseLabel=5. Check Phase
workflowState.check.phaseLabel.toolTip=This is the stage when the RIF manager decides \nwhat data quality checks will be generated to supplement the finished data set.
workflowState.check.statusMessage=Checked
workflowState.publish.label=Publish
workflowState.publish.phaseLabel=6. Publish Phase
workflowState.publish.statusMessage=Published
workflowState.stop.label=Stop
workflowState.stop.statusMessage=Data set has been processed.
workflowState.delete.label=Delete
workflowState.delete.statusMessage=Deleted

#Workflow Validator messages
workflowValidator.error.startStopStatesNotInOrder=The end workflow state {0} comes before the start workflow state {1}.
workflowValidator.error.dataSetsHaveDifferentStates=The data sets should all be in the same work flow state.  Instead, there is a mix of these steps: {0}.
workflowValidator.error.missingRequiredConvertFields=The data set is intended for the schema part \"{0}\" but it is missing these convert field names: {1}
workflowValidator.error.unexpectedDataTypeForConvertField=You have mapped field {0} to RIF schema field that expects a data type {1} and not {2}.
workflowValidator.error.noGeographicalFields=The data set {0} is mapped to the RIF schema area {1}, which expects at least one geographical resolution field.
workflowValidator.error.noHealthCodeFields=The data set {0} is mapped to the RIF schema area {1}, which expects at least one health code field.
workflowValidator.error.noCovariateFields=The data set {0} is mapped to the RIF schema area {1}, which expects at least one covariate field.
workflowValidator.error.notIndexingRequiredField=The field {0} is a required field, which means the setting optimiseUsingIndex must be true.

workflowValidator.error.notIndexingSynthesisedField=The field {0} is a required field that results from conversion. No field configuration exists for it, which means it is a synthesised field (eg: age_sex_group)

workflowValidator.error.checkOptionNotSupportedForSchemaArea=The field {0} maps to part of schema area {1}, and this check is not supported for this specific field.

workflowValidator.error.illegalCurrentStateInLinearWorkflow=A linear work flow cannot contain the states SPLIT or COMBINE.  You also can't use a data set configuration that is already in the PUBLISH state.
workflowValidator.error.workflowAndDataSetsNeedSameStartingState=The work flow expects a starting state of {0} but at least one data set configuration has a starting state of {1}.



rifCheckOption.plural.label=Check Options
rifCheckOption.percentEmptyPerYear.label=Percent Empty per Year
rifCheckOption.percentEmptyPerYear.description=The percentage of records, by year, which have an empty field anywhere in the record.
rifCheckOption.percentEmpty.label=Percent Empty
rifCheckOption.percentEmpty.description=The percentage of all records which have an empty field anywhere in the record.


dataSetConfiguration.recordType=dataSetConfiguration

dataSetConfiguration.name.plural.label=Data Sets
dataSetConfiguration.name.plural.toolTip=Data loader configurations for imported data sets.
dataSetConfiguration.name.label=Data Set Name
dataSetConfiguration.name.toolTip=The name of the data set.
dataSetConfiguration.description.label=Description
dataSetConfiguration.version.label=Version
dataSetConfiguration.version.toolTip=The version of the data set.  It can be something like 1.1, or 1-a etc.
dataSetConfiguration.filePath.label=File path
dataSetConfiguration.filePath.toolTip=The location of the data set that needs to be imported.
dataSetConfiguration.description.label=Data Set Description
dataSetConfiguration.description.toolTip=This is where the RIF manager should describe\n details of what the data set contains and where it came from.
dataSetConfiguration.currentWorkflowState.label=Current Workflow 
dataSetConfiguration.rifSchemaArea.label=RIF Schema Area
dataSetConfiguration.rifSchemaArea.toolTip=The area of the schema that is the ultimate \ndestination for the imported data set.
dataSetConfiguration.baseDataSetName=data_set
dataSetConfiguration.error.noRequiredFields=At least one field in the data set configuration needs to be required by the RIF.

dataSetFieldConfiguration.recordType=dataSetFieldConfiguration
dataSetFieldConfiguration.plural.label=Data Set Field Configurations
dataSetFieldConfiguration.baseDefaultFieldName=Field
dataSetFieldConfiguration.parentRecordName.label=Parent Data Set Name
dataSetFieldConfiguration.coreFieldName.label=Core Field Name
dataSetFieldConfiguration.coreFieldName.toolTip=This is the main name of the field, independent \nof what stage is being processed.
dataSetFieldConfiguration.coreFieldDescription.label=Field Description 
dataSetFieldConfiguration.coreFieldDescription.toolTip=Describes the meaning of the field as it \nis found in the imported data set.
dataSetFieldConfiguration.loadFieldName.label=Load Field Name
dataSetFieldConfiguration.loadFieldName.toolTip=The name of the field when it is first imported \ninto the database.  It can come from a header line\n in a CSV file or it can be auto-generated if no header data are available.
dataSetFieldConfiguration.cleanFieldName.label=Clean Field Name
dataSetFieldConfiguration.cleanFieldName.toolTip=The name of the field that the RIF manager would want \nto use to rename an imported field.  Often it is the \nsame as load field name but it can be different if the \nload field names are auto-generated when data are first imported.
dataSetFieldConfiguration.isRequired.label=Is required
dataSetFieldConfiguration.isRequired.toolTip=Can the field value be empty? If the option is ticked then validation will detect errors when this field is empty.

dataSetFieldConfiguration.convertFieldName.label=Convert Field Name
dataSetFieldConfiguration.convertFieldName.toolTip=The name of a field that is expected in the RIF schema.
dataSetFieldConfiguration.convertFunctionName.label=Convert Function Name
dataSetFieldConfiguration.convertFunctionName.toolTip=Describes the name of a function used to map cleaned \nfields to fields in a converted version of the data set.
dataSetFieldConfiguration.isDuplicateIdentificationField.label=Identifies duplicates
dataSetFieldConfiguration.isDuplicateIdentificationField.toolTip=Can the field be used to help identify\n duplicates in a collection of records? Sometimes \nmultiple fields together are needed to identify \nwhether two records are duplicates.
dataSetFieldConfiguration.optimiseUsingIndex.label=Create Index
dataSetFieldConfiguration.optimiseUsingIndex.toolTip=Create an index for this field? For fields that are required by the RIF schema, they are automatically indexed.
dataSetFieldConfiguration.checkOptions.includePercentEmptyPerYearCheck.label=Include percent empty-per-year check
dataSetFieldConfiguration.checkOptions.includePercentEmptyPerYearCheck.toolTip=If it is ticked, then a data quality \ncheck will be produced for this field which calculates the \npercentage of field values that are empty, grouped \nby year.  This only applies to data sets that \nare destined to become numerator and denominator tables.
dataSetFieldConfiguration.checkOptions.includePercentEmptyCheck.label=Include percent empty check
dataSetFieldConfiguration.checkOptions.includePercentEmptyCheck.toolTip=If it is ticked, then a data quality check will be produced for this field which calculates the percentage of empty field values.
dataSetFieldConfiguration.fieldPurpose.label=Field Purpose
dataSetFieldConfiguration.fieldPurpose.toolTip=Describes the purpose of the field. For \nsome destination areas of the RIF schema, \nprocessing the data set requires that a field \nsatisfy a role. Health code and numerator data \nrequire at least one field which is a health \ncode.  Covariate data requires at least one column \nthat serves as a covariate.  At least one field in \nnumerator and denominator data must be a Geographical \nResolution.  Other refers to all all other purposes.  
dataSetFieldConfiguration.fieldRequirementLevel.label=Field Requirement Level
dataSetFieldConfiguration.fieldRequirementLevel.toolTip=Describes the purpose of the field.  Required by RIF means that the convert field name must be one of a set of expected, pre-defined values.  An extra \nfield is one the RIF manager wants to promote in a \ndata set but which is not required by the RIF.  Ignore \nmeans the field will not be promoted beyond the Load step.
dataSetFieldConfiguration.fieldChangeAuditLevel.label=Field Change Audit Level
dataSetFieldConfiguration.fieldChangeAuditLevel.toolTip=Describes the extent to which changes in the field should be recorded in audit logs.  'Field only' simply records that the field was changed.  A detailed change description will include the field, original and revised values.  None will not record any field changes at all.
dataSetFieldConfiguration.rowNumber.description=Row number of this record as it appears in the original imported data set.
dataSetFieldConfiguration.dataSetIdentifier.description=Identifier of data set, which is found in the table data_set_configurations.
dataSetFieldConfiguration.ageSexGroup.description=A combination of age and sex group that is expressed as a single value.
dataSetFieldConfiguration.keep.description=Determines if record should be kept Y or N.  Records marked N are considered duplicates.
dataSetFieldConfiguration.error.duplicateLoadFieldName=There is already a data set field with the load field name {0}.
dataSetFieldConfiguration.error.duplicateCleanFieldName=There is already a data set field with the clean field name {0}.
dataSetFieldConfiguration.error.duplicateConvertFieldName=There is already a data set field with the convert field name {0}.

#This property is used to generate new field names
dataSetFieldConfiguration.baseFieldName=field

fieldPurpose.covariate.label=Covariate
fieldPurpose.geograpicalResolution.label=Geographical Resolution
fieldPurpose.healthCode.label=Health Code
fieldPurpose.other.label=Other

fieldChangeAuditLevel.none.label=None
fieldChangeAuditLevel.includeFieldNameOnly.label=Include field name only
fieldChangeAuditLevel.includeFieldChangeDescription.label=Include detailed change description

fieldRequirementLevel.requiredByRIF=Required by RIF
fieldRequirementLevel.extraField=Extra field
fieldRequirementLevel.ignoreField=Ignore field

rifSchemaArea.covariateData.label=Covariate Data
rifSchemaArea.healthCodeData.label=Health Code Data
rifSchemaArea.healthThemes.label=Health Themes
rifSchemaArea.healthNumeratorData.label=Health Numerator Data
rifSchemaArea.populationDenominatorData.label=Population Denominator Data
rifSchemaArea.geometryData.label=Geometry Data
rifSchemaArea.contextualMapData.label=Contextual Map Data

#Properties related to RIF data types
abstractRIFDataType.name.label=RIF Data Type
abstractRIFDataType.name.toolTip=Describes a set of predefined data types, \neach of which has a data type, a validation\n aspect and a cleaning aspect.
rifDataType.name.label=Name
rifDataType.description.label=Description
rifDataType.validationPattern=Validation pattern
rifDataType.integer.label=Integer
rifDataType.integer.description=A number.
rifDataType.quintilise.label=Quintilised field
rifDataType.quintilise.description=A field that is quintilised.

rifDataType.double.label=Double
rifDataType.double.description=A Double number.
rifDataType.asciiText.label=ASCII Text
rifDataType.asciiText.description=A field with only ascii characters.
rifDataType.text.label=Text
rifDataType.text.description=Sequence that can include letters, numbers, a space, an underscore and a dash.
rifDataType.ukPostalCode.label=UK Postal Code
rifDataType.ukPostalCode.description=The format of a UK postal code.
rifDataType.nhsNumber.label=UK NHS Number
rifDataType.nhsNumber.description=Format of a UK NHS number.
rifDataType.sex.label=Sex
rifDataType.sex.description=One of three values: 1 male 2 female 3 unknown
rifDataType.age.label=Age
rifDataType.age.description=A positive number less than 120.
rifDataType.date.label=Date
rifDataType.date.description=A date of the format {0}.
rifDataType.ukPostalCode.label=UK Postal Code
rifDataType.ukPostalCode.description=A UK postal code.
rifDataType.date.label=Date
rifDataType.date.description=A date with the format {0}.
rifDataType.icd.label=ICD
rifDataType.icd.description=An IC9 or ICD10 code.
rifDataType.year.label=Year
rifDataType.year.description=Year.
rifDataType.nhsNumber.label=NHS Number
rifDataType.nhsNumber.description=A field with the NHS number format.
rifDataType.sex.name1=Remove occurrences of female
rifDataType.sex.description1=Replace upper and lower case occurrences of \'female\' with a 1.
rifDataType.sex.name2=Remove occurrences of male
rifDataType.sex.description2=Replace upper and lower case occurrences of \'male\' with a 0.
rifDataType.sex.name3=Remove occurrences of hermaphrodite
rifDataType.sex.description3=Replace upper and lower case occurrences of \'hermaphrodite\' with a 2.
rifDataType.sex.name4=Remove occurrences of unknown
rifDataType.sex.description4=Replace upper and lower case occurrences of \'unknown\' with a 3.
rifDataType.sex.name5=Remove occurrences of f or F
rifDataType.sex.description5=Replace upper and lower case single letter occurrences of \'f\' with a 0.
rifDataType.sex.name6=Remove occurrences of m or M
rifDataType.sex.description6=Replace upper and lower case single letter occurrences of \'m\' with a 0.
rifDataType.sex.name7=Remove occurrences of h or H (hermaphrodite)
rifDataType.sex.description7=Replace upper and lower case single letter occurrences of \'h\' with a 0.
rifDataType.sex.name8=Remove occurrences of u or U (unknown)
rifDataType.sex.description8=Replace upper and lower case single letter occurrences of \'u\' with a 0.


abstractDataLoaderService.error.unableToCopyOriginalData=Unable to copy original data for data set \"{0}\".
abstractDataLoaderService.error.unableToCopyWorkflowFile=Unable to copy workflow file that processed the data set \"{0}\".

abstractDataLoaderStepManager.error.unableToCreateCommonIndices=Unable to create indices on table {0} for row_number and data_set_identifier.
abstractDataLoaderStepManager.error.unableToCopyTable=Unable to copy table from {0} to {1}.
abstractDataLoaderStepManager.error.unableToDeleteTable=Unable to delete table from {0}.
abstractDataLoaderStepManager.error.unableToAddPrimaryKeys=Unable to add primary key fields to table {0}.
abstractDataLoaderStepManager.error.unableToAddComments=Unable to add comments to table {0}.
abstractDataLoaderStepManager.error.unableToRenameTable=Unable to rename table from {0} to {1}.
abstractDataLoaderStepManager.error.unableToExportTable=Unable to export table {0}.
abstractDataLoaderStepManager.error.unableToCreateTemporaryDirectories=Unable to create temporary directories for data set {0}.


dataSetManager.error.unableToCreateDataSetConfigurationsTable=Unable to create data set configurations table.
dataSetManager.error.dataSetConfigurationAlreadyExists=Data set {0} already exists.
dataSetManager.error.unableToAddDataSetConfiguration=Unable to add data set {0} to the database.
dataSetManager.error.unableToDeleteDataSetConfiguration=Unable to delete data set {0} from the database.
dataSetManager.error.unableToCheckDataSetConfigurationExists=Unable to check whether data set {0} exists.
dataSetManager.error.unableToUpdateLastCompletedState=Unable to update last updated state of {0}.


rifConversionFunction.code.label=Code
rifConversionFunction.schemaName.label=Schema
rifConversionFunction.functionName.label=Function Name
rifConversionFunction.error.unexpectedNumberOfParameters=Function {0} has {1} formal parameters but has {2} actual parameters.
rifConversionFunction.error.noMatchForFormalParameter=Function {0} has no match for formal parameter {1}.
rifConversionFunction.error.incorrectParameterType=Function {0} parameter {1} expects a data type of {2} but the type of the actual parameter is {3}.

sampleRIFDatabaseCreationManager.error.unableToInitialiseDB=Unable to initialise fake rif database.



sqlConnectionManager.error.unableToCreateConnections=Unable to create database connections for data loader services.

extractWorkflowManager.error.unableToAddRowNumbers=Unable to add original row numbers to imported table {0}.
extractWorkflowManager.error.unableToDataSetNumber=Unable to add data set numbers to imported table {0}.
rifDataLoaderTool.title=RIF Data Loader Tool


dataSetProcessingDialog.title=Processing Data Set Configurations
dataSetProcessingDialog.instructions=To import a new data set, press \"Load\".  Then follow the \
sequence steps moving from left to right along the row of buttons.  As you change the currently selected \
data set configuration in the table below, the buttons will change colour and sensitivity.  Dark buttons \
indicate that a step has been done.  Slightly lighter buttons indicate an optional next step.  Lighter \
buttons indicate a required future step.  Buttons are desensitised to prevent you from skipping steps. \
You can go back to earlier steps, but you will lose any changes beyond the step you go back to.


dataLoaderBatchTool.error.noArgumentsSpecified=No command line arguments have been supplied.
dataLoaderBatchTool.error.noConfigurationFileSpecified=No configuration file specified.



dataSetProcessingDialog.buttons.delete.label=Delete selected data sets


#Manager class messages
extractWorkflowManager.error.createExtractTable=Failed to create the extract table {0}.
extractWorkflowManager.error.dropExtractTable=Failed to drop the extract table {0}.
convertWorkflowManager.error.unableToCreateConvertTable=Unable to create conversion table for configuration {0}.
convertWorkflowManager.error.unknownConversionActivity=Data set fields suggest a conversion activity but we don't know how to process it.

optimiseWorkflowManager.error.unableToCreateIndex=Unable to create index {0} for configuration {1}.
optimiseWorkflowManager.error.unableToDeleteIndex=Unable to delete index {0} for configuration {1}.
convertWorkflowManager.error.unableToCreateOptimiseTable=Unable to create optimise table for configuration {0}.
checkWorkflowManager.error.unableToCreateCheckedTable=Unable to create checked table for configuration {0}.
checkWorkflowManager.error.unableToCreateEmptyCheckTable=Unable to create empty field check table {0}.
checkWorkflowManager.error.unableToCreateEmptyPerYearCheckTable=Unable to create empty-per-year field check table {0}.

changeAuditManager.error.unableToAuditFieldOnlyChanges=Unable to audit field-only changes for data set {0}.
changeAuditManager.error.unableToAuditValidationFailures=Unable to audit rows that failed validation, even when cleaning efforts have been considered.
changeAuditManager.error.unableToClearAuditLogs=Unable to clear audit logs.

publishWorkflowManager.unableToPublishConfiguration=Unable to publish configuration {0}.
publishWorkflowManager.unableToZipResults=Unable to zip results for configuration {0}.

csvFilePreviewReader.line.label=LINE
csvFilePreviewReader.error.unexpectedNumberOfColumns=LINE {0}:Expected number of columns is {1} but is {2}.
csvFilePreviewReader.error.nonExistentInputFile=File {0} does not exist.
csvFilePreviewReader.error.generalReaderError=Encountered problems reading data from file {0}.
csvFilePreviewReader.error.unableToCloseFile=Unable to close file {0}.
csvFilePreviewReader.error.unableToWriteLogFile=Unable to write error log file for data file {0}.










dataSetConfiguration.name.label=Name
dataSetConfiguration.description.label=Description
dataSetConfiguration.creationDate.label=Creation Date
dataSetConfiguration.state.label=State


loadDataActivityStepDialog.instructions.label=You can load your raw data either from \
a CSV file or from an existing published table.  All of the columns in the new table \
will be of type text.  If the CSV file has no header row, all columns will be named \
field1, field2, fieldN.  Also note that if you copy a production table, the new table \
will not have any indices, primary keys, foreign keys or columns of other data types \
besides text.
loadDataActivityStepDialog.loadSourceFile.label=Load data from source file
loadDataActivityStepDialog.sourceFile.label=Source File
loadDataActivityStepDialog.firstLineHeaderRow.label=Is the first line a header row?
loadDataActivityStepDialog.sourceTable.label=Source Table
loadDataActivityStepDialog.importedTableName.label=Imported Table Name
loadDataActivityStepDialog.loadSourceTable.label=Load data from existing published table

loadDataActivityStepDialog.destinationTableName.label=Destination table name
loadDataActivityStepDialog.decideFromExistingTableName.label=Decide from existing table names...

loadDataActivityStepDialog.error.noSourceFileSpecified=No source file specified.
loadDataActivityStepDialog.error.noSourceTableSpecified=No source table specified.


tableNameSelectionDialog.tableName.label=Table Name
tableNameSelectionDialog.tableDescription.label=Description
tableNameSelectionDialog.creationDate.label=Creation Date


cleanDataActivityStepDialog.instructions=Here you can map fields from the original data table \
to the corresponding staging table.  Each field has default settings used to transform \
original data into cleaned data. 
cleanDataActivityStepDialog.cleaningPropertiesTable.label=Mapping original to cleaned table
cleanDataActivityStepDialog.editProperties.label=Edit properties...
cleanDataActivityStepDialog.resetProperties.label=Reset properties...
cleanDataActivityStepDialog.cleaningInformation.label=Cleaning information


cleaningConfigurationFieldEditorDialog.title=Cleaning Field Configuration Editor Dialog
cleaningConfigurationFieldEditorDialog.basicInformation.label=Basic Information
cleaningConfigurationFieldEditorDialog.loadDataFieldName.label=Load table field name
cleaningConfigurationFieldEditorDialog.preferredCleanedFieldName.label=Preferred cleaned field name
cleaningConfigurationFieldEditorDialog.properties.label=Properties

cleaningConfigurationFieldEditorDialog.dataType.label=Data type
cleaningConfigurationFieldEditorDialog.limits.label=Limits

cleaningConfigurationFieldEditorDialog.button.exploreVariance=Explore variance...
cleaningConfigurationFieldEditorDialog.dataCleaningRules.label=Cleaning Rules

fieldVarianceDialog.error.unableToObtainVariance=Unable to obtain variance for table \"{0}\", field \"{1}\".
fieldVarianceReport.title=Variance of values for table {0} field {1}
fieldVarianceReport.value.label=Value
fieldVarianceReport.frequency.label=Frequency


cleaningConfigurationTableModel.originalTableFieldName.label=Original Field
cleaningConfigurationTableModel.cleanedTableFieldName.label=Cleaned Field
cleaningConfigurationTableModel.dataType.label=Data Type
cleaningConfigurationTableModel.hasCleaningRules.label=Cleaning Rules?
cleaningConfigurationTableModel.yes.label=Yes
cleaningConfigurationTableModel.no.label=No


cleaningRuleEditorDialog.title=Cleaning Rule Editor Dialog
cleaningRuleEditorDialog.instructions=Please define a new rule.  Note that you can include regular expression characters in your search value but not your replace value.
cleaningRuleEditorDialog.isRegularExpressionSearch.label=Is regular expression search?

cleaningRule.label=Cleaning Rule
cleaningRule.name.label=Name
cleaningRule.description.label=Description
cleaningRule.searchValue.label=Search Value
cleaningRule.replaceValue.label=Replace Value


rifFieldValidationPolicy.validationFunction.label=Validation function
rifFieldValidationPolicy.validationRules.label=Validation rules
rifFieldValidationPolicy.sqlFragment.label=SQL fragment
rifFieldValidationPolicy.noValidation.label=No validation

rifFieldCleaningPolicy.cleaningFunction.label=Cleaning function
rifFieldCleaningPolicy.cleaningRules.label=Cleaning rules
rifFieldCleaningPolicy.sqlFragment.label=SQL fragment
rifFieldCleaningPolicy.noCleaning.label=No cleaning


shapeFileLoaderDialog.title=Load Shape Files
shapeFileLoaderDialog.instructions=Use this dialog to select one or more shape files.  Note that a shape file is actually a collection of three separate files, all having the same base file name: a main file (*.shp), an index file (*.shx) and a dBASE table (*.dbf). The shape file must have these three files or it will not be detected.
shapeFileLoaderDialog.error.unableToLoadShapeFile=Unable to load shape file {0}.
shapeFileDirectory.label=Shape File Directory
shapeFile.name.label=Shape File
shapeFile.name.plural.label=Shape Files
shapeFile.shp.label=Main File
shapeFile.shx.label=Index File
shapeFile.dbf.label=Database Table File
shapeFile.error.invalidBaseShapeFileName=Main, index and database table files for shape file do not have the same base name.

shutDownDialog.title=Shutdown Manager Dialog
shutDownDialog.warningMessage=Warning.  Shutting down all connections used by all users.



buttons.delete.label=Delete







simpleSubstitutionCleaningRule.name=Simple substitution cleaning rule
simpleSubstitutionCleaningRule.description=If the original value is X, it changes it to Y.




dataSetManager.error.unableToCleardataSets=Unable to clear all data sources.
dataSetManager.error.registerdataSet=Failed to register data source {0}.
dataSetManager.error.dataSetAlreadyExists=Failed to determine whether data source {0} exists.

dataSetRegistry.error.createdataSetRegistry=Failed to create data source registry table.
dataSetRegistry.error.deletedataSetRegistry=Failed to delete data source registry table.
dataSetRegistry.error.deregisterdataSet=Failed to deregister data source {0}.


cleaningStepManager.error.createCleanedTable=Failed to create the cleaned table {0}.


sqlConnectionManager.error.unableToRegisterUser=Unable to register user {0}.


userRole.label=User Role
userRole.rifManager.label=RIF Manager
userRole.rifStudent.label=RIF Student
userRole.rifUser.label=RIF User
userManager.error.unableToAddUser=Unable to add user \"{0}\".
userManager.error.unableToChangeUser=Unable to change user \"{1}\".
userManager.error.unableToDeleteUser=Unable to delete user \"{0}\".

logging.registerDataSet=User {0} at IP Address {1} attempting to register data source \"{2}\".
logging.getdataSetFromCoreTableName=User {0} at IP Address {1} attempting to retrieve the data source for core table name \"{2}\".
logging.clearAllDataSets=User {0} at IP Address {1} attempting to clear all data sources.
logging.loadConfiguration=User {0} at IP Address {1} attempting to load configuration using table configuration for \"{2}\".
logging.addLoadTableData=User {0} at IP Address {1} attempting to load data into table \"{2}\".
logging.getLoadTableData=User {0} at IP Address {1} attempting to get data from load table \"{2}\".
logging.cleanConfiguration=User {0} at IP Address {1} attempting to clean the table configuration \"{2}\".
logging.getCleanedTableData=User {0} at IP Address {1} getting cleaned data from table configuration \"{2}\".
logging.generateResultReports=User {0} at IP Address {1} getting cleaned data from table configuration \"{2}\".



logging.getCleaningTotalBlankValues=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\".

logging.getCleaningTotalChangedValues=User {0} at IP Address {1} getting total changed fields from table configuration \"{2}\".
logging.getCleaningTotalBlankValues=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\".
logging.getCleaningTotalErrorValues=User {0} at IP Address {1} getting total error fields from table configuration \"{2}\".
logging.cleaningDetectedBlankValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".

logging.cleaningDetectedChangedValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".
logging.cleaningDetectedErrorValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".

logging.convertConfiguration=User {0} at IP Address {1} converting data set {2}.
logging.optimiseConfiguration=User {0} at IP Address {1} optimising data set {2}.
logging.checkConfiguration=User {0} at IP Address {1} checking data set {2}.
logging.getVarianceInFieldData=User {0} at IP Address {1} getting the variance in field data for load table {2}, field of interest {3}.

logging.publishConfiguration=User {0} at IP Address {1} publishing data set {2}.



#===================================================================
#Properties for Model Classes
#===================================================================

dataSet.label=Data Source
dataSet.coreTableName.label=Core Table Name
dataSet.derivedFromExistingTable.label=Derived from Existing Table
dataSet.sourceName.label=Source Name
dataSet.userID.label=User ID
dataSet.registrationDate.label=Registration Date





sqlQuery.databaseFailed=Database failed to execute query.
sqlQuery.comment.applyCleaningRule=apply cleaning rule
sqlQuery.comment.allowBlankValues=allow blank values
sqlQuery.comment.compliesWithValidationRules=complies with validation rules
sqlQuery.comment.failsValidationRules=fails validation rules



getCleaningTotalChangedValues.error.unableToGetTotal=Unable to get total changed values from table configuration \"{0}\".
getCleaningTotalBlankValues.error.unableToGetTotal=Unable to get total blank values from table configuration \"{0}\".
getCleaningTotalErrorValues.error.unableToGetTotal=Unable to get total error values from table configuration \"{0}\".

cleaningDetectedChangedValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is changed. 
cleaningDetectedBlankValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is a blank. 
cleaningDetectedErrorValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is an error.

tableIntegrityChecker.error.unableToCompareTables=Unable to compare the number of rows in tables \"{0}\" and \"{1}\".
tableIntegrityChecker.error.tablesHaveDifferentSizes=Table \"{0}\" and table \"{1}\" have different numbers of rows.  This suggests a database join didn't work as planned.



queryComments.clean.searchReplaceQuery.comment1=CLEAN LOADED DATA.
queryComments.clean.searchReplaceQuery.comment2=Apply cleaning activities to data in the load table, and storing
queryComments.clean.searchReplaceQuery.comment3=it in a search and replace table

queryComments.clean.validationQuery.comment1=VALIDATE THE CLEANED DATA.
queryComments.clean.validationQuery.comment2=After all the cleaning has been done, check whether the field values are valid.

queryComments.clean.dropValidationQuery.comment1=CLEANUP CLEANED VALIDATED TABLE. 
queryComments.clean.dropValidationQuery.comment2=Delete any existing table that holds the validation part of cleaning.

queryComments.clean.deleteAuditsQuery.comment1=CLEANUP OLD AUDIT RECORDS FOR DATA SOURCE.  
queryComments.clean.deleteAuditsQuery.comment2=Delete any existing audit records associated with the data source.

queryComments.clean.addChangeAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT WERE CHANGED.  
queryComments.clean.addChangeAudits.comment2=The audits are created by comparing the original values in the load table
queryComments.clean.addChangeAudits.comment3=with values in the table that holds the results of applying cleaning rules.

queryComments.clean.addErrorAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT RESULT IN ERRORS.  
queryComments.clean.addErrorAudits.comment2=The audits are created by identifying any field value in the cleaned validation table
queryComments.clean.addErrorAudits.comment3=marked with \"rif_error\".

queryComments.clean.addBlankAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT RESULT IN BLANKS.  
queryComments.clean.addBlankAudits.comment2=The audits are created by identifying any field value in the cleaned validation table
queryComments.clean.addBlankAudits.comment3=are blank.

queryComments.clean.castQuery.comment1=CAST VALIDATED DATA TO APPROPRIATE DATA TYPES.
queryComments.clean.castQuery.comment2=By now, the original data have been loaded and changed through any applicable cleaning rules.
queryComments.clean.castQuery.comment3=The table holding the cleaned validated data is used to cast data from
queryComments.clean.castQuery.comment4=text values to other data types.  Field values which contain blanks or are marked
queryComments.clean.castQuery.comment5=as \"rif errors\" are cast as null values in the table containing casted results.

queryComments.clean.dropCastQuery.comment1=CLEANUP CLEAN CASTED TABLE.
queryComments.clean.dropSearchReplaceQuery.comments1=CLEANUP TABLE CONTAINING RESULTS OF SEARCH REPLACE CLEANING.








io.directoriesOnly.name=Directories only
io.directoriesOnly.description=Only file directories will appear.
io.xmlFileFilter.name=XML Files
io.xmlFileFilter.description=XML files that contain workflow configurations.
io.csvFileFilter.name=CSV Files
io.csvFileFilter.description=CSV files that contain tabular data.



populationHealthDataLoaderDialog.title=Population Health Data Loader Dialog
populationHealthDataLoaderDialog.buttons.initialiseDemoDatabase.label=Initialise database...
populationHealthDataLoaderDialog.buttons.editDatabaseDataTypes.label=Edit supported database types...


populationHealthDataLoaderDialog.startWorkState.label=Starting Step
populationHealthDataLoaderDialog.startWorkState.toolTip=All the data sets that are part of the work \nflow must be in the same start state.  
populationHealthDataLoaderDialog.stopWorkState.label=Stopping Step
populationHealthDataLoaderDialog.stopWorkState.toolTip=All the data sets will be transformed in the same \nsequence of steps, beginning with the start \nstate and ending in the stop state.

populationHealthDataLoaderDialog.error.startStateComesAfterStopState=Start state \"{0}\" comes after stop state \"{1}\".
populationHealthDataLoaderDialog.info.workflowFinishedRunning=The workflow has been successfully completed.

populationHealthDataLoaderDialog.copyDataSetConfiguration.title=Data Set Name Editor Dialog
populationHealthDataLoaderDialog.copyDataSetConfiguration.instructions=Choose a new name for the copied data set configuration.
populationHealthDataLoaderDialog.copyDataSetConfiguration.fieldName=Data Set Name

populationHealthDataLoaderDialog.workflowOptions.label=Workflows
populationHealthDataLoaderDialog.dataSetOptions.label=Data Sets

csvFileSelectionDialog.title=CSV File Selection Dialog
csvFileSelectionDialog.instructions=Please choose a CSV file and press \"Preview\". The default delimiter is \",\".  
csvFileSelectionDialog.csvFile.label=CSV File
csvFileSelectionDialog.delimiter.label=Delimiter
csvFileSelectionDialog.preview.label=Preview
csvFileSelectionDialog.resetDisplay.label=Reset

dataSetConfigurationEditorDialog.title=Data Set Configuration Editor Dialog
dataSetConfigurationEditorDialog.instructions=Use this editor to configure properties of the data set you're importing.
dataSetConfigurationEditorDialog.fieldListName.label=Data Set Fields

dataSetConfigurationEditorDialog.copyDataSetFieldConfiguration.title=Data Set Field Name Editor Dialog
dataSetConfigurationEditorDialog.copyDataSetFieldConfiguration.instructions=Choose a new name for the copied field.
dataSetConfigurationEditorDialog.copyDataSetFieldConfiguration.fieldName=Field Name

dataSetFieldConfigurationEditorPanel.title=Data Field Properties

general.buttons.browse.label=Browse

initialiseDemoDatabaseDialog.title=Initialise Demonstration Database
initialiseDemoDatabaseDialog.instructions=Press "OK" to create and initialise the demonstration database.
initialiseDemoDatabaseDialog.databaseName.label=Database Name
initialiseDemoDatabaseDialog.databaseHost.label=Database Host
initialiseDemoDatabaseDialog.databasePort.label=Database Port
initialiseDemoDatabaseDialog.userID.label=User ID
initialiseDemoDatabaseDialog.password.label=Password

sampleRIFDatabaseCreationManager.error.unableToInitialiseDatabase=Unable to initialise database.

loadingScriptWriter.comment.databaseType.postgreSQL=PostgreSQL
loadingScriptWriter.comment.databaseType.sqlServer=SQL Server
loadingScriptWriter.comment.header=Data Loading Script for Data Set {0}.
loadingScriptWriter.comment.targetDatabase=Run this script in a {0} database.
loadingScriptWriter.comment.timeStamp=Generated on {0}.

loadingScriptWriter.comment.sectionDivider=---------------------------------------------
loadingScriptWriter.comment.createTable=Creating production table
loadingScriptWriter.comment.addingPrimaryKeys=Establishing primary keys

loadingScriptWriter.comment.addingIndices=Adding indices
loadingScriptWriter.comment.addingSchemaComments=Adding schema comments


rifDataLoaderToolApplication.title=RIF Data Loader Tool
rifDataLoaderToolApplication.instructions=Welcome to the RIF Data Loader Tool.\n  We'll provide more useful instructions here later.
rifDataLoaderToolApplication.buttons.loadShapeFiles.label=Load Shape Files...
rifDataLoaderToolApplication.buttons.loadPopulationHealthData.label=Load population health data...



