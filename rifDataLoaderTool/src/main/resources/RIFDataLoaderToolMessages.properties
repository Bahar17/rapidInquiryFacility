#================================================================================
#The Rapid Inquiry Facility (RIF) is an automated tool devised by SAHSU 
#that rapidly addresses epidemiological and public health questions using 
#routinely collected health and population data and generates standardised 
#rates and relative risks for any given health outcome, for specified age 
#and year ranges, for any given geographical area.
#
#Copyright 2014 Imperial College London, developed by the Small Area
#Health Statistics Unit. The work of the Small Area Health Statistics Unit 
#is funded by the Public Health England as part of the MRC-PHE Centre for 
#Environment and Health. Funding for this project has also been received 
#from the United States Centers for Disease Control and Prevention.  
#
#This file is part of the Rapid Inquiry Facility (RIF) project.
#RIF is free software: you can redistribute it and/or modify
#it under the terms of the GNU Lesser General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#RIF is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU Lesser General Public License for more details.
#
#You should have received a copy of the GNU Lesser General Public License
#along with RIF. If not, see <http://www.gnu.org/licenses/>; or write 
#to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, 
#Boston, MA 02110-1301 USA
#
#author: Kevin Garwood
#================================================================================

rifDataLoaderTool.title=RIF Data Loader Tool

buttons.delete.label=Delete

rifDataLoaderActivityStep.loadRawDataTable.label=Load
rifDataLoaderActivityStep.loadRawDataTable.statusMessage=Raw data table loaded
rifDataLoaderActivityStep.cleanDataTable.label=Clean
rifDataLoaderActivityStep.cleanDataTable.statusMessage=Cleaned
rifDataLoaderActivityStep.applyRIFSpecificTransformation.label=Apply RIF Changes
rifDataLoaderActivityStep.applyRIFSpecificTransformation.statusMessage=Applied RIF changes
rifDataLoaderActivityStep.combineTables.label=Combine
rifDataLoaderActivityStep.combineTables.statusMessage=Combined tables
rifDataLoaderActivityStep.optimiseTable.label=Optimise
rifDataLoaderActivityStep.optimiseTable.statusMessage=Optimised
rifDataLoaderActivityStep.publishTable.label=Publish
rifDataLoaderActivityStep.publishTable.statusMessage=Published

simpleSubstitutionCleaningRule.name=Simple substitution cleaning rule
simpleSubstitutionCleaningRule.description=If the original value is X, it changes it to Y.


rifDataType.name.label=Name
rifDataType.description.label=Description
rifDataType.validationPattern=Validation pattern
rifDataType.integer.label=Integer
rifDataType.integer.description=A number.
rifDataType.double.label=Double
rifDataType.double.description=A Double number.
rifDataType.asciiText.label=ASCII Text
rifDataType.asciiText.description=A field with only ascii characters.
rifDataType.text.label=Text
rifDataType.text.description=Sequence that can include letters, numbers, a space, an underscore and a dash.
rifDataType.ukPostalCode.label=UK Postal Code
rifDataType.ukPostalCode.description=The format of a UK postal code.
rifDataType.nhsNumber.label=UK NHS Number
rifDataType.nhsNumber.description=Format of a UK NHS number.
rifDataType.sex.label=Sex
rifDataType.sex.description=One of three values: 1 male 2 female 3 unknown
rifDataType.age.label=Age
rifDataType.age.description=A positive number less than 120.
rifDataType.age.label=Date
rifDataType.age.description=A date of the format {0}.
rifDataType.ukPostalCode.label=UK Postal Code
rifDataType.ukPostalCode.description=A UK postal code.
rifDataType.date.label=Date
rifDataType.date.description=A date with the format {0}.
rifDataType.icd.label=ICD
rifDataType.icd.description=An IC9 or ICD10 code.

rifDataType.nhsNumber.label=NHS Number
rifDataType.nhsNumber.description=A field with the NHS number format.

rifDataType.sex.name1=Remove occurrences of female
rifDataType.sex.description1=Replace upper and lower case occurrences of \'female\' with a 1.
rifDataType.sex.name2=Remove occurrences of male
rifDataType.sex.description2=Replace upper and lower case occurrences of \'male\' with a 0.
rifDataType.sex.name3=Remove occurrences of hermaphrodite
rifDataType.sex.description3=Replace upper and lower case occurrences of \'hermaphrodite\' with a 2.
rifDataType.sex.name4=Remove occurrences of unknown
rifDataType.sex.description4=Replace upper and lower case occurrences of \'unknown\' with a 3.

rifDataType.sex.name5=Remove occurrences of f or F
rifDataType.sex.description5=Replace upper and lower case single letter occurrences of \'f\' with a 0.
rifDataType.sex.name6=Remove occurrences of m or M
rifDataType.sex.description6=Replace upper and lower case single letter occurrences of \'m\' with a 0.

rifDataType.sex.name7=Remove occurrences of h or H (hermaphrodite)
rifDataType.sex.description7=Replace upper and lower case single letter occurrences of \'h\' with a 0.
rifDataType.sex.name8=Remove occurrences of u or U (unknown)
rifDataType.sex.description8=Replace upper and lower case single letter occurrences of \'u\' with a 0.



dataSourceManager.error.unableToClearDataSources=Unable to clear all data sources.
dataSourceManager.error.registerDataSource=Failed to register data source {0}.
dataSourceManager.error.dataSourceAlreadyExists=Failed to determine whether data source {0} exists.

dataSourceRegistry.error.createDataSourceRegistry=Failed to create data source registry table.
dataSourceRegistry.error.deleteDataSourceRegistry=Failed to delete data source registry table.
dataSourceRegistry.error.deregisterDataSource=Failed to deregister data source {0}.

loadStepManager.error.createLoadTable=Failed to create the load table {0}.
loadStepManager.error.dropLoadTable=Failed to drop the load table {0}.

cleaningStepManager.error.createCleanedTable=Failed to create the cleaned table {0}.


sqlConnectionManager.error.unableToRegisterUser=Unable to register user {0}.


logging.registerDataSource=User {0} at IP Address {1} attempting to register data source \"{2}\".
logging.getDataSourceFromCoreTableName=User {0} at IP Address {1} attempting to retrieve the data source for core table name \"{2}\".
logging.clearAllDataSources=User {0} at IP Address {1} attempting to clear all data sources.
logging.loadConfiguration=User {0} at IP Address {1} attempting to load configuration using table configuration for \"{2}\".
logging.addLoadTableData=User {0} at IP Address {1} attempting to load data into table \"{2}\".
logging.getLoadTableData=User {0} at IP Address {1} attempting to get data from load table \"{2}\".
logging.cleanConfiguration=User {0} at IP Address {1} attempting to clean the table configuration \"{2}\".
logging.getCleanedTableData=User {0} at IP Address {1} getting cleaned data from table configuration \"{2}\".

logging.getCleaningTotalBlankValues=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\".

logging.getCleaningTotalChangedValues=User {0} at IP Address {1} getting total changed fields from table configuration \"{2}\".
logging.getCleaningTotalBlankValues=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\".
logging.getCleaningTotalErrorValues=User {0} at IP Address {1} getting total error fields from table configuration \"{2}\".
logging.cleaningDetectedBlankValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".

logging.cleaningDetectedChangedValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".
logging.cleaningDetectedErrorValue=User {0} at IP Address {1} getting total blank fields from table configuration \"{2}\", field \"{3}\".

dataSource.label=Data Source
dataSource.coreTableName.label=Core Table Name
dataSource.derivedFromExistingTable.label=Derived from Existing Table
dataSource.sourceName.label=Source Name
dataSource.userID.label=User ID
dataSource.registrationDate.label=Registration Date


sqlQuery.databaseFailed=Database failed to execute query.
sqlQuery.comment.applyCleaningRule=apply cleaning rule
sqlQuery.comment.allowBlankValues=allow blank values
sqlQuery.comment.compliesWithValidationRules=complies with validation rules
sqlQuery.comment.failsValidationRules=fails validation rules



getCleaningTotalChangedValues.error.unableToGetTotal=Unable to get total changed values from table configuration \"{0}\".
getCleaningTotalBlankValues.error.unableToGetTotal=Unable to get total blank values from table configuration \"{0}\".
getCleaningTotalErrorValues.error.unableToGetTotal=Unable to get total error values from table configuration \"{0}\".

cleaningDetectedChangedValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is changed. 
cleaningDetectedBlankValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is a blank. 
cleaningDetectedErrorValue.error.unableToGetStatus=Unable to determine audit result if row {0}, field \"{1}\", table configuration \"{2}\" is an error.

tableIntegrityChecker.error.unableToCompareTables=Unable to compare the number of rows in tables \"{0}\" and \"{1}\".
tableIntegrityChecker.error.tablesHaveDifferentSizes=Table \"{0}\" and table \"{1}\" have different numbers of rows.  This suggests a database join didn't work as planned.



queryComments.clean.searchReplaceQuery.comment1=CLEAN LOADED DATA.
queryComments.clean.searchReplaceQuery.comment2=Apply cleaning activities to data in the load table, and storing
queryComments.clean.searchReplaceQuery.comment3=it in a search and replace table

queryComments.clean.validationQuery.comment1=VALIDATE THE CLEANED DATA.
queryComments.clean.validationQuery.comment2=After all the cleaning has been done, check whether the field values are valid.

queryComments.clean.dropValidationQuery.comment1=CLEANUP CLEANED VALIDATED TABLE. 
queryComments.clean.dropValidationQuery.comment2=Delete any existing table that holds the validation part of cleaning.

queryComments.clean.deleteAuditsQuery.comment1=CLEANUP OLD AUDIT RECORDS FOR DATA SOURCE.  
queryComments.clean.deleteAuditsQuery.comment2=Delete any existing audit records associated with the data source.

queryComments.clean.addChangeAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT WERE CHANGED.  
queryComments.clean.addChangeAudits.comment2=The audits are created by comparing the original values in the load table
queryComments.clean.addChangeAudits.comment3=with values in the table that holds the results of applying cleaning rules.

queryComments.clean.addErrorAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT RESULT IN ERRORS.  
queryComments.clean.addErrorAudits.comment2=The audits are created by identifying any field value in the cleaned validation table
queryComments.clean.addErrorAudits.comment3=marked with \"rif_error\".

queryComments.clean.addBlankAudits.comment1=ADD AUDITS OF CLEANED VALUES THAT RESULT IN BLANKS.  
queryComments.clean.addBlankAudits.comment2=The audits are created by identifying any field value in the cleaned validation table
queryComments.clean.addBlankAudits.comment3=are blank.

queryComments.clean.castQuery.comment1=CAST VALIDATED DATA TO APPROPRIATE DATA TYPES.
queryComments.clean.castQuery.comment2=By now, the original data have been loaded and changed through any applicable cleaning rules.
queryComments.clean.castQuery.comment3=The table holding the cleaned validated data is used to cast data from
queryComments.clean.castQuery.comment4=text values to other data types.  Field values which contain blanks or are marked
queryComments.clean.castQuery.comment5=as \"rif errors\" are cast as null values in the table containing casted results.

queryComments.clean.dropCastQuery.comment1=CLEANUP CLEAN CASTED TABLE.
queryComments.clean.dropSearchReplaceQuery.comments1=CLEANUP TABLE CONTAINING RESULTS OF SEARCH REPLACE CLEANING.