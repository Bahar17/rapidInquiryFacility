RIF.chart.multipleAreaCharts.d3renderer = ( function( settings,resultSets, data , update ) {	
  
  //Will sort it later
  var margin = settings.margin,
    width = settings.dimensions.width(),
    height = settings.dimensions.height(),
    contextHeight = 50,
    contextWidth = width * .5,
	el = settings.element;

  var svg = d3.select( "#" + el ).append( "svg" )
    .attr( "width", width - margin.left - margin.right )
    .attr( "height", ( height - margin.top - margin.bottom ) );
	
  
  var x = d3.scale.linear()
    .range([0, width]);  
  
  var y = d3.scale.linear()
	.range([height, 0]);
	
  var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left");	
   
  var charts = [];

    var resultsCount = count =  resultSets.length, 
		maxDataPoint = 0,
		minDataPoint = 0;
		
	while( count-- ) {
		var currentMax = d3.max( data, function( d ) {
			return d[ resultSets[count] ];
		});
		var currentMin = d3.min( data, function( d ) {
			return d[ resultSets[count] ];
		});
		maxDataPoint = (maxDataPoint >  currentMax) ? maxDataPoint : currentMax;
		minDataPoint = (minDataPoint >  currentMin) ? minDataPoint : currentMin;
	};
	
	
    for ( var i = 0; i < resultsCount; i++ ) {
      charts.push( new Chart( {
        data: data.slice(),
        id: i,
        name: resultSets[ i ],
		maxDataPoint: maxDataPoint,
		minDataPoint: minDataPoint,
		height: height * ( 1 / resultsCount),
        svg: svg,
        margin: margin,
        showBottomAxis: ( i == resultsCount - 1 )
      } ) );

    }

    

  function Chart( options ) {
	
	var area = d3.svg.area()
		.x(function(d) { return x(d.x_order); })
		.y0(options.height)
		.y1(function(d) { return y(d[options.name]) });
		
	
	 x.domain(d3.extent(options.data, function(d) { return d.x_order; }));
	 y.domain([0, d3.max(options.data, function(d) { return d[options.name]; })]);
	 
	 svg.append("path")
      .datum(options.data)
      .attr("class", "area")
      .attr("d", area);
	  
	  
	   
	/*svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + chartHeight + ")")
      .call(xAxis);*/
	  
	  
	 svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr( "class", "country-title" )
      .attr( "transform", "translate(15,40)" )
      .text( options.name );  
	
      
   }
    
} );